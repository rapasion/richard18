---
 - name: unarchive pcre file
   unarchive:
     src: "{{ gml_source_path }}/download/{{ pcre_gml_source_file }}"
     dest: "{{ gml_source_path }}/"
     owner: "{{ code_user }}"
     group: "{{ code_user }}"
     mode: "0750"
     remote_src: yes
   tags:
    - pcre_tar_file
    
 - name: Check {{ gml_source_path }}/lib folder if exist.
   stat:
     path: "{{ gml_source_path }}/lib"
   register: gml_source_lib
   tags:
    - pcre_tar_file

 - name: Create {{ gml_source_path }}/lib folder if not exist.
   file:
     path: "{{ gml_source_path }}/lib"
     state: directory
     owner: "{{ code_user }}"
     group: "{{ code_user }}"
     mode: "0750"
   when: not gml_source_lib.stat.exists
   tags:
    - pcre_tar_file

 - name: Check {{ gml_source_path }}/lib/pkgconfig folder if exist.
   stat:
     path: "{{ gml_source_path }}/lib/pkgconfig"
   register: gml_source_lib_pkgconfig
   tags:
    - pcre_tar_file

 - name: Create {{ gml_source_path }}/lib/pkgconfig folder if not exist.
   file:
     path: "{{ gml_source_path }}/lib/pkgconfig"
     state: directory
     owner: "{{ code_user }}"
     group: "{{ code_user }}"
     mode: "0750"
   when: not gml_source_lib_pkgconfig.stat.exists
   tags:
    - pcre_tar_file

 - name: Check {{ gml_source_path }}/include folder if exist.
   stat:
     path: "{{ gml_source_path }}/include"
   register: gml_source_include
   tags:
    - pcre_tar_file

 - name: Create {{ gml_source_path }}/include folder if not exist.
   file:
     path: "{{ gml_source_path }}/include"
     state: directory
     owner: "{{ code_user }}"
     group: "{{ code_user }}"
     mode: "0750"
   when: not gml_source_include.stat.exists
   tags:
    - pcre_tar_file

 - name: Check {{ gml_source_path }}/bin folder if exist.
   stat:
     path: "{{ gml_source_path }}/bin"
   register: gml_source_bin
   tags:
    - pcre_tar_file

 - name: Create {{ gml_source_path }}/bin folder if not exist.
   file:
     path: "{{ gml_source_path }}/bin"
     state: directory
     owner: "{{ code_user }}"
     group: "{{ code_user }}"
     mode: "0750"
   when: not gml_source_bin.stat.exists
   tags:
    - pcre_tar_file

 - name: Link pcre includes
   file:
     src: "{{ pcre_source_install_path }}/include/{{ item }}"
     dest: "{{ gml_source_path }}/include/{{ item }}"
     state: link
     force: yes
   with_items:
     - pcre.h
     - pcre_scanner.h
     - pcre_stringpiece.h
     - pcrecpp.h
     - pcrecpparg.h
     - pcreposix.h
   tags:
    - pcre_tar_file	 

 - name: Link PCRE Bin
   file:
     src: "{{ pcre_source_install_path }}/bin/{{ item }}"
     dest: "{{ gml_source_path }}/bin/{{ item }}"
     state: link
     force: yes
   with_items:
     - pcre-config
     - pcregrep
     - pcretest
   tags:
    - pcre_tar_file

 - name: ensure gml directory correct permission
   shell: sh -c "{{ item }}"
   with_items:
     - "sudo chown -R {{ code_user }}:{{ code_user }} {{ gml_source_path }}"
     - "sudo chmod 750 {{ gml_source_path }}"
   tags:
    - pcre_tar_file

 - name: Set selinux context for pcre bin
   shell: "sudo semanage fcontext -a -t bin_t '{{ gml_source_path }}/{{pcre_version}}(/.*)?'"
   tags:
    - pcre_tar_file

 - name: Set selinux context for curl
   shell: "sudo semanage fcontext -a -t lib_t '{{ gml_source_path }}/{{pcre_version}}/lib(/.*)?'"
   tags:
    - pcre_tar_file
